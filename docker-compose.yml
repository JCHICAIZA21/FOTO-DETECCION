version: '3.8'

services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=json_processor
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  hikvision-listener:
    build: ./hikvision-listener
    ports:
      - "8080:8080"
    container_name: hikvision_event_server
    restart: unless-stopped
    volumes:
      - ./hikvision-listener/eventos:/eventos
    networks:
      - app-network

  runt-service:
    build: ./runt-service
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/json_processor
    env_file:
      - .env
    volumes:
      - ./runt-service:/app
      - ./claveprivada.pkcs8.pem:/app/claveprivada.pkcs8.pem
      - ./hikvision-listener/eventos:/eventos
    ports:
      - "8002:8002"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

  api-consumer:
    build:
      context: .
      dockerfile: api-consumer/Dockerfile
    environment:
      - API_URL=http://api-consumer:8000
      - RUNT_SERVICE_URL=http://runt-service:8002
      - DATABASE_URL=postgresql://postgres:password@db:5432/json_processor
    volumes:
      - ./hikvision-listener/eventos:/eventos:ro
      - ./app/output:/app/output
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      runt-service:
        condition: service_started
    networks:
      - app-network

  frontend:
    build: ./app
    environment:
      - SERVICE_TYPE=frontend
      - DATABASE_URL=postgresql://postgres:password@db:5432/json_processor
      - RUNT_SERVICE_URL=http://runt-service:8002
      - API_URL=http://api-consumer:8000
    env_file:
      - .env
    volumes:
      - ./app:/app
      - ./app/output:/app/output
      - pdf_data:/app/output/pdfs
      - ./hikvision-listener/eventos:/eventos
    ports:
      - "8501:8501"
    depends_on:
      db:
        condition: service_healthy
      runt-service:
        condition: service_started
      api-consumer:
        condition: service_started
    networks:
      - app-network

volumes:
  db_data:
  pdf_data:

networks:
  app-network:
    driver: bridge
